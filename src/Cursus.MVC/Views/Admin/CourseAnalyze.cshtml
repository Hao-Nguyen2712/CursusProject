@using System.Globalization
@model IEnumerable<Cursus.MVC.Models.CourseAnalyzeViewModel>
@{
    ViewData["Title"] = "Analyze Course";
    Layout = "_LayoutAdmin";
    string FormatCurrencyUSD(decimal amount)
    {
        return string.Format(new CultureInfo("en-US"), "{0:C2}", amount);
    }
}


<div class="container-fluid body ">
    <h1 class="my-4 text-center">Analyze Sell Coures</h1>
    <button class="btn btn-primary" id="exportBtn" onclick="exportToExcel()">Print Excel</button>
    <div class="table-responsive">
        <table class="table table-striped table-bordered" id="categoriesTable">
            <thead class="thead-dark">
                <tr>
                    <th class="thTitle">No</th>
                    <th class="thTit'le">Course ID</th>
                    <th class="text-center thTitle">Course Name</th>
                    <th class="thTitle">Total Enroll</th>
                    <th class="thTitle">Total Money</th>

                </tr>
            </thead>
            <tbody>
                @{
                    var i = 1;
                }
                @foreach (var item in Model)
                {

                    <tr>
                        <td>@i</td>
                        <td>@item.CourseId</td>
                        <td>@item.CourseName</td>
                        <td>@item.TotalCourse</td>
                        <td>@FormatCurrencyUSD(item.TotalMoney)</td>
                    </tr>
                    i++;

                }
            </tbody>
        </table>
    </div>
</div>


@section Styles {
    <style>
        .container-fluid {
            min-height: 40vh;
            width: 100%;
            max-width: 100%;


        }

        .container-fluid .flex-grow-1 {
            flex: 1;
            width: 100%;
            overflow-y: auto;
        }

        .create {
            font-size: 17px;
            padding: 0 5px;
        }

        .table-responsive {
            margin-top: 40px;
        }

        .thTitle {
            font-size: 18px;
            font-weight: 500;
            padding: 25px 15px;
        }

        .body {
            position: relative;
            padding-bottom: 50px;
            min-height: 100vh;
        }

        /* Tạo kiểu cho DataTables */
        table.dataTable {
            width: 100%;
            margin: 20px 0;
            border-collapse: collapse;
        }

        table.dataTable th,
        table.dataTable td {
            padding: 10px;
            text-align: left;
        }

        table.dataTable thead th {
            background-color: #ed2a26;
            color: white;
        }

        table.dataTable tbody tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        table.dataTable tbody tr:nth-child(odd) {
            background-color: #ffffff;
        }

        table.dataTable tbody tr:hover {
            background-color: #ddd;
        }

        .dataTables_filter input {
            margin-left: 0.5em;
            padding: 5px;
        }

        .dataTables_paginate {
            margin-top: 20px;
            text-align: center;
        }

        .dataTables_paginate .paginate_button {
            display: inline-block;
            padding: 5px 10px;
            margin: 0 2px;
            background-color: #4CAF50;
            color: white;
            cursor: pointer;
            border-radius: 4px;
        }

        .dataTables_paginate .paginate_button.disabled {
            background-color: #cccccc;
            color: #666666;
            cursor: default;
        }

        .dt-search {
            margin-top: 12px;
        }

        .dt-search .dt-input {
            width: 250px;
            padding: 4px;
            margin-left: 12px;
            font-size: 15px;
            border-radius: 5px;
            border: 1px solid #ccc;
            outline: none;
            background-color: #f9f9f9;
            color: #333;
        }

        .dt-search .dt-input:focus {
            border-color: #ff0019;
            box-shadow: 0 0 5px rgba(255, 89, 0, 0.5);
        }

        .dt-length .dt-input {
            border: none;
            font-size: 15px;
        }

        .dt-length label {
            margin-left: 20px;
            text-transform: capitalize;
        }

        .dt-paging.paging_full_numbers {
            text-align: center;
        }

        .dt-paging.paging_full_numbers button {
            border: none;
            font-size: 18px;
            margin: 0 2px;

        }
    </style>
}

@section Scripts {
    <script src="https://cdn.datatables.net/2.0.8/js/dataTables.js"></script>
    <script>
        $(document).ready(function () {
            $('#categoriesTable').DataTable();
        });


        function exportToExcel() {
            Swal.fire({
                title: 'Confirm Export',
                text: 'Are you sure you want to export the data to Excel?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Yes, export it!',
                cancelButtonText: 'No, cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    var data = [];

                    $('#categoriesTable tbody tr').each(function () {
                        var courseId = $(this).find('td:eq(1)').text();
                        var courseName = $(this).find('td:eq(2)').text();
                        var totalCourse = parseInt($(this).find('td:eq(3)').text().trim(), 10);
                        var totalMoneyText = $(this).find('td:eq(4)').text().trim();
                        var totalMoney = parseFloat(totalMoneyText.replace(/[^\d.-]/g, ''));


                        console.log("CourseId:", courseId);
                        console.log("CourseName:", courseName);
                        console.log("TotalCourse:", totalCourse);
                        console.log("TotalMoney:", totalMoney);

                        data.push({
                            CourseId: courseId,
                            CourseName: courseName,
                            TotalCourse: totalCourse,
                            TotalMoney: totalMoney
                        });
                    });

                    console.log(JSON.stringify(data));

                    $.ajax({
                        url: '@Url.Action("GetReportToExcel", "Admin")',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(data),
                        xhrFields: {
                            responseType: 'blob'
                        },
                        success: function (response) {
                            if (response) {
                                var blob = new Blob([response], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
                                var url = URL.createObjectURL(blob);

                                var downloadLink = document.createElement('a');
                                downloadLink.href = url;
                                downloadLink.download = 'Report.xlsx';
                                document.body.appendChild(downloadLink);
                                downloadLink.click();
                                document.body.removeChild(downloadLink);
                            } else {
                                console.error('Không có đường dẫn file Excel trả về từ server.');
                            }
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            console.error('Lỗi khi gọi GetReportToExcel:', errorThrown);
                        }
                    });
                }
            });

        }
    </script>
}