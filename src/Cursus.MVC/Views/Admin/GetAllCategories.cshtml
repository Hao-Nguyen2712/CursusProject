@model IEnumerable<Cursus.MVC.Models.CategoryViewModel>
@{
    ViewData["Title"] = "Category Management";
    Layout = "_LayoutAdmin";
    
    var categoryList = Model.Where(c => c.CategoryStatus != "InActive").ToList();
    var totalCategories = categoryList.Count();
    var totalInactive = Model.Count(c => c.CategoryStatus == "InActive");
}

<!-- Display Success/Error Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle me-2"></i>
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="fas fa-exclamation-circle me-2"></i>
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container-fluid">
    <!-- Page Header -->
    <div class="table_title">
        <h2><i class="fas fa-tags me-3"></i>Category Management</h2>
        <p>Manage course categories and organize your content</p>
    </div>

        <!-- Statistics Cards -->
        <div class="row mb-4">
            <div class="col-xl-6 col-lg-6 col-12">
                <div class="dashboard_stats_card">
                    <div class="dashboard_stats_card_icon">
                        <i class="fas fa-layer-group"></i>
                    </div>
                    <div class="dashboard_stats_card_content">
                        <h4>@totalCategories</h4>
                        <p>Active Categories</p>
                    </div>
                </div>
            </div>
            <div class="col-xl-6 col-lg-6 col-12">
                <div class="dashboard_stats_card">
                    <div class="dashboard_stats_card_icon rejected">
                        <i class="fas fa-archive"></i>
                    </div>
                    <div class="dashboard_stats_card_content">
                        <h4>@totalInactive</h4>
                        <p>Inactive Categories</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Actions and Filters -->
        <div class="filters_section mb-4">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="searchInput" class="form-label">Search Categories</label>
                        <input type="text" id="searchInput" class="form-control" placeholder="Search by category name...">
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="statusFilter" class="form-label">Filter by Status</label>
                        <select id="statusFilter" class="form-control">
                            <option value="">All Categories</option>
                            <option value="active" selected>Active Only</option>
                            <option value="inactive">Inactive Only</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label class="form-label">&nbsp;</label>
                        <button type="button" class="btn btn-primary d-block w-100" data-bs-toggle="modal" data-bs-target="#createCategoryModal">
                            <i class="fas fa-plus me-1"></i>Create Category
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Categories Table -->
        @if (totalCategories == 0)
        {
            <!-- Empty State -->
            <div class="text-center py-5">
                <div class="mb-4">
                    <i class="fas fa-tags" style="font-size: 4rem; color: #dee2e6;"></i>
                </div>
                <h4 class="text-muted">No Categories Found</h4>
                <p class="text-muted">Create your first category to get started organizing your courses.</p>
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createCategoryModal">
                    <i class="fas fa-plus me-1"></i>Create First Category
                </button>
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table ucp-table" id="categoriesTable">
                    <thead class="thead-s">
                        <tr>
                            <th>#</th>
                            <th>Category Name</th>
                            <th>Status</th>
                            <th>Created Date</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            var i = 1;
                            foreach (var item in categoryList)
                            {
                                <tr>
                                    <td class="cell-ta row-number">@i</td>
                                    <td class="cell-ta">
                                        <div class="category-info">
                                            <div class="category-icon">
                                                <i class="fas fa-tag"></i>
                                            </div>
                                            <div class="category-details">
                                                <strong>@item.CategoryName</strong>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="cell-ta">
                                        <span class="badge bg-success">
                                            <i class="fas fa-check-circle me-1"></i>Active
                                        </span>
                                    </td>
                                    <td class="cell-ta">
                                        <small class="text-muted">
                                            <i class="fas fa-calendar me-1"></i>
                                            @DateTime.Now.ToString("MMM dd, yyyy")
                                        </small>
                                    </td>
                                    <td class="cell-ta">
                                        <div class="dropdown">
                                            <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                                <i class="fas fa-ellipsis-v"></i>
                                            </button>
                                            <ul class="dropdown-menu">
                                                <li>
                                                    <a class="dropdown-item edit-category" href="#" 
                                                       data-bs-toggle="modal" data-bs-target="#updateCategoryModal" 
                                                       data-category-id="@item.CategoryId" data-category-name="@item.CategoryName">
                                                        <i class="fas fa-edit me-2"></i>Edit Category
                                                    </a>
                                                </li>
                                                <li><hr class="dropdown-divider"></li>
                                                <li>
                                                    <a class="dropdown-item text-danger delete-category" href="#" 
                                                       data-category-id="@item.CategoryId" data-category-name="@item.CategoryName"
                                                       data-delete-url="@Url.Action("DeleteCategory", "Admin", new { id = item.CategoryId })">
                                                        <i class="fas fa-trash me-2"></i>Delete Category
                                                    </a>
                                                </li>
                                            </ul>
                                        </div>
                                    </td>
                                </tr>
                                i++;
                            }
                        }
                    </tbody>
                </table>
            </div>
        }
</div>

<!-- Create Category Modal -->
<div class="modal fade" id="createCategoryModal" tabindex="-1" aria-labelledby="createCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content modern-modal">
            <div class="modal-header">
                <div class="modal-icon">
                    <i class="fas fa-plus-circle"></i>
                </div>
                <div class="modal-title-content">
                    <h5 class="modal-title" id="createCategoryModalLabel">Create New Category</h5>
                    <p class="modal-subtitle">Add a new category to organize your courses</p>
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="createCategoryForm" method="post" action="@Url.Action("AddNewCategory", "Admin")" novalidate>
                    <div class="form-group mb-4">
                        <label for="categoryName" class="form-label">
                            <i class="fas fa-tag me-2"></i>Category Name
                        </label>
                        <input type="text" class="form-control" id="categoryName" name="CategoryName" 
                               placeholder="Enter category name..." required maxlength="100">
                        <div class="invalid-feedback">
                            <i class="fas fa-exclamation-circle me-1"></i>Category name is required and must be less than 100 characters.
                        </div>
                        <div class="form-text">
                            <i class="fas fa-info-circle me-1"></i>Choose a descriptive name for your category
                        </div>
                    </div>
                    
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-1"></i>Cancel
                </button>
                <button type="button" class="btn btn-primary" onclick="submitForm()">
                    <i class="fas fa-plus me-1"></i>Create Category
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Update Category Modal -->
<div class="modal fade" id="updateCategoryModal" tabindex="-1" aria-labelledby="updateCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content modern-modal">
            <div class="modal-header">
                <div class="modal-icon edit">
                    <i class="fas fa-edit"></i>
                </div>
                <div class="modal-title-content">
                    <h5 class="modal-title" id="updateCategoryModalLabel">Update Category</h5>
                    <p class="modal-subtitle">Modify category information</p>
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="updateCategoryForm" method="post" action="" novalidate>
                    <input type="hidden" id="updateCategoryId" name="CategoryId" />
                    
                    <div class="form-group mb-4">
                        <label for="updateCategoryName" class="form-label">
                            <i class="fas fa-tag me-2"></i>Category Name
                        </label>
                        <input type="text" class="form-control" id="updateCategoryName" name="CategoryName" 
                               placeholder="Enter category name..." required maxlength="100">
                        <div class="invalid-feedback">
                            <i class="fas fa-exclamation-circle me-1"></i>Category name is required and must be less than 100 characters.
                        </div>
                    </div>
                    
                    <div class="form-group mb-3">
                        <label class="form-label">
                            <i class="fas fa-palette me-2"></i>Category Icon
                        </label>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-1"></i>Cancel
                </button>
                <button type="button" class="btn btn-warning" onclick="updateCategory()">
                    <i class="fas fa-save me-1"></i>Update Category
                </button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        /* Container and Layout Fixes */
        .container-fluid {
            padding-left: 15px;
            padding-right: 15px;
            margin: 0;
            max-width: 100%;
            overflow-x: hidden;
            width: 100%;
        }

        body {
            overflow-x: hidden;
        }

        /* Admin Layout Specific Fixes */
        .main-content {
            padding: 20px;
            margin: 0;
            width: 100%;
        }

        .wrapper {
            margin: 0;
            padding: 0;
        }

        /* Dashboard Statistics Cards */
        .dashboard_stats_card {
            background: #fff;
            border-radius: 12px;
            padding: 25px;
            box-shadow: 0 2px 15px rgba(0,0,0,0.1);
            margin-bottom: 20px;
            border-left: 4px solid #ed2a26;
            transition: transform 0.3s, box-shadow 0.3s;
            position: relative;
            overflow: hidden;
        }

        .dashboard_stats_card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }

        .dashboard_stats_card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 3px;
            background: linear-gradient(90deg, #ed2a26, #ff6b6b);
        }

        .dashboard_stats_card_icon {
            width: 70px;
            height: 70px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 20px;
            background: linear-gradient(135deg, #ed2a26, #ff6b6b);
            box-shadow: 0 4px 20px rgba(237, 42, 38, 0.3);
        }

        .dashboard_stats_card_icon.approved {
            background: linear-gradient(135deg, #28a745, #20c997);
            box-shadow: 0 4px 20px rgba(40, 167, 69, 0.3);
        }

        .dashboard_stats_card_icon.pending {
            background: linear-gradient(135deg, #ffc107, #fd7e14);
            box-shadow: 0 4px 20px rgba(255, 193, 7, 0.3);
        }

        .dashboard_stats_card_icon.rejected {
            background: linear-gradient(135deg, #6c757d, #495057);
            box-shadow: 0 4px 20px rgba(108, 117, 125, 0.3);
        }

        .dashboard_stats_card_icon i {
            font-size: 28px;
            color: white;
        }

        .dashboard_stats_card_content h4 {
            font-size: 32px;
            font-weight: 700;
            margin: 0;
            color: #333;
            line-height: 1;
        }

        .dashboard_stats_card_content p {
            margin: 8px 0 0 0;
            color: #666;
            font-size: 14px;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        /* Page Header */
        .table_title {
            margin-bottom: 30px;
        }

        .table_title h2 {
            font-size: 28px;
            font-weight: 700;
            color: #333;
            margin-bottom: 8px;
        }

        .table_title p {
            color: #666;
            margin: 0;
            font-size: 16px;
        }

        /* Filters Section */
        .filters_section {
            background: #f8f9fa;
            padding: 25px;
            border-radius: 12px;
            margin-bottom: 25px;
            border: 1px solid #e9ecef;
        }

        .filters_section .form-control {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 10px 15px;
            font-size: 14px;
            transition: border-color 0.2s, box-shadow 0.2s;
        }

        .filters_section .form-control:focus {
            border-color: #ed2a26;
            box-shadow: 0 0 0 0.2rem rgba(237, 42, 38, 0.25);
        }

        .filters_section .btn {
            padding: 10px 20px;
            font-size: 14px;
            border-radius: 8px;
            font-weight: 500;
        }

        /* Table Styles */
        .table-responsive {
            border-radius: 12px;
            box-shadow: 0 2px 15px rgba(0,0,0,0.1);
            overflow: hidden;
            background: white;
            margin-top: 20px;
        }

        .ucp-table {
            background: white;
            border-radius: 12px;
            border: none;
            margin: 0;
            width: 100%;
            table-layout: fixed;
        }

        /* DataTables wrapper improvements */
        .dataTables_wrapper {
            background: white;
            border-radius: 12px;
            overflow: hidden;
        }

        /* Ensure no margin issues */
        .dataTables_wrapper .row > div {
            padding-left: 0;
            padding-right: 0;
        }

        .ucp-table thead.thead-s th {
            background: linear-gradient(135deg, #ed2a26, #ff4757);
            color: white;
            font-weight: 600;
            padding: 20px 15px;
            border: none;
            text-transform: uppercase;
            font-size: 12px;
            letter-spacing: 0.5px;
        }

        .ucp-table tbody tr {
            transition: all 0.2s;
            border: none;
        }

        .ucp-table tbody tr:hover {
            background-color: #f8f9fa;
            transform: scale(1.001);
        }

        .ucp-table .cell-ta {
            padding: 20px 15px;
            vertical-align: middle;
            border-bottom: 1px solid #f1f3f4;
            border-top: none;
        }

        /* Category Info */
        .category-info {
            display: flex;
            align-items: center;
            gap: 12px;
            min-height: 50px;
        }

        .category-icon {
            width: 40px;
            height: 40px;
            border-radius: 8px;
            background: linear-gradient(135deg, #ed2a26, #ff6b6b);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 16px;
        }

        .category-details {
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .category-details strong {
            color: #333;
            font-size: 14px;
            font-weight: 600;
            line-height: 1.2;
        }

        .category-details small {
            color: #666;
            font-size: 11px;
            line-height: 1.2;
            margin-top: 2px;
        }

        /* Badges */
        .badge {
            font-size: 11px;
            padding: 8px 12px;
            border-radius: 20px;
            font-weight: 500;
            letter-spacing: 0.5px;
        }

        /* Dropdown Styles */
        .dropdown {
            position: relative;
        }

        .dropdown-toggle {
            border: 1px solid #dee2e6;
            background: #fff;
            color: #6c757d;
            transition: all 0.2s ease;
        }

        .dropdown-toggle:hover {
            background: #f8f9fa;
            border-color: #ed2a26;
            color: #ed2a26;
        }

        .dropdown-toggle:focus {
            box-shadow: 0 0 0 0.2rem rgba(237, 42, 38, 0.25);
        }

        .dropdown-menu {
            border: none;
            box-shadow: 0 8px 30px rgba(0,0,0,0.15);
            border-radius: 10px;
            padding: 8px 0;
            margin-top: 5px;
            min-width: 180px;
            z-index: 1050;
        }

        .dropdown-item {
            padding: 12px 18px;
            font-size: 14px;
            font-weight: 500;
            color: #495057;
            transition: all 0.2s ease;
            display: flex;
            align-items: center;
        }

        .dropdown-item:focus {
            background-color: #f8f9fa;
            color: #ed2a26;
        }

        .dropdown-item i {
            width: 20px;
            text-align: center;
            margin-right: 8px;
            font-size: 14px;
        }

        .dropdown-item.text-danger {
            color: #dc3545;
        }

        .dropdown-item.text-danger:focus {
            background-color: rgba(220, 53, 69, 0.1);
            color: #dc3545;
        }

        .dropdown-divider {
            margin: 8px 0;
            border-top: 1px solid #e9ecef;
        }

        /* Ensure dropdown doesn't get cut off in tables */
        .table-responsive {
            overflow: visible;
        }

        .dataTables_wrapper {
            overflow: visible;
        }

        /* Modern Modal Styles */
        .modern-modal {
            border: none;
            border-radius: 15px;
            box-shadow: 0 10px 40px rgba(0,0,0,0.2);
        }

        .modern-modal .modal-header {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            border-bottom: 1px solid #dee2e6;
            padding: 25px;
            border-radius: 15px 15px 0 0;
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .modal-icon {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: linear-gradient(135deg, #ed2a26, #ff6b6b);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 20px;
        }

        .modal-icon.edit {
            background: linear-gradient(135deg, #ffc107, #fd7e14);
        }

        .modal-title-content {
            flex: 1;
        }

        .modal-title {
            margin: 0;
            font-size: 20px;
            font-weight: 700;
            color: #333;
        }

        .modal-subtitle {
            margin: 0;
            font-size: 14px;
            color: #666;
        }

        .modern-modal .modal-body {
            padding: 30px;
        }

        .modern-modal .modal-footer {
            padding: 20px 30px;
            border-top: 1px solid #dee2e6;
            background: #f8f9fa;
            border-radius: 0 0 15px 15px;
        }

        /* Form Styles */
        .form-label {
            font-weight: 600;
            color: #333;
            margin-bottom: 8px;
        }

        .form-control {
            border: 2px solid #e9ecef;
            border-radius: 8px;
            padding: 12px 15px;
            font-size: 14px;
            transition: all 0.2s;
        }

        .form-control:focus {
            border-color: #ed2a26;
            box-shadow: 0 0 0 0.2rem rgba(237, 42, 38, 0.25);
        }

        .form-text {
            font-size: 12px;
            color: #666;
            margin-top: 5px;
        }

        .invalid-feedback {
            font-size: 12px;
            color: #dc3545;
            margin-top: 5px;
        }

        /* Icon Selector */
        .icon-selector {
            margin-top: 8px;
        }

        .icon-options {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

        .icon-option {
            width: 45px;
            height: 45px;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            background: white;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 16px;
            color: #666;
            user-select: none;
            outline: none;
            position: relative;
        }

        .icon-option:hover {
            border-color: #ed2a26;
            background: rgba(237, 42, 38, 0.1);
            color: #ed2a26;
            transform: scale(1.05);
            box-shadow: 0 2px 8px rgba(237, 42, 38, 0.2);
        }

        .icon-option.active {
            border-color: #ed2a26;
            background: #ed2a26;
            color: white;
            transform: scale(1.05);
            box-shadow: 0 4px 12px rgba(237, 42, 38, 0.3);
        }

        .icon-option:focus {
            outline: 2px solid #ed2a26;
            outline-offset: 2px;
        }

        /* Alert Styles */
        .alert {
            border: none;
            border-radius: 10px;
            padding: 15px 20px;
            margin-bottom: 25px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .alert i {
            font-size: 16px;
        }

        /* Empty State */
        .text-center i {
            animation: bounce 2s ease-in-out infinite;
        }

        @@keyframes bounce {
            0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
            40% { transform: translateY(-10px); }
            60% { transform: translateY(-5px); }
        }

        .dt-info{
            padding : 15px 0 ;
        }
         .dt-paging{
            padding : 15px 0 ;
        }
        /* DataTables Customization */
        .dataTables_wrapper {
            margin-top: 20px;
        }

        .dataTables_wrapper .dataTables_filter {
            float: right;
            text-align: right;
            margin-bottom: 15px;
        }

        .dataTables_wrapper .dataTables_filter label {
            font-weight: 500;
            color: #333;
        }

        .dataTables_wrapper .dataTables_filter input {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 8px 12px;
            margin-left: 8px;
            width: 200px;
        }

        .dataTables_wrapper .dataTables_length {
            float: left;
            margin-bottom: 15px;
        }

        .dataTables_wrapper .dataTables_length label {
            font-weight: 500;
            color: #333;
        }

        .dataTables_wrapper .dataTables_length select {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 6px 10px;
            margin: 0 5px;
        }

        .dataTables_wrapper .dataTables_info {
            float: left;
            padding-top: 8px;
            color: #666;
            font-size: 14px;
        }

        .dataTables_wrapper .dataTables_paginate {
            float: right;
            text-align: right;
            padding-top: 0;
            margin-top: 10px;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button {
            border: 1px solid #dee2e6;
            border-radius: 6px;
            padding: 10px 15px;
            margin: 0 2px;
            background: #fff;
            color: #333;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
            min-width: 44px;
            text-align: center;
            transition: all 0.2s ease;
            font-size: 14px;
            line-height: 1;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button:hover {
            background: #ed2a26;
            color: white !important;
            border-color: #ed2a26;
            text-decoration: none;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button.current {
            background: #ed2a26 !important;
            color: white !important;
            border-color: #ed2a26;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button.disabled {
            color: #6c757d !important;
            background: #f8f9fa !important;
            border-color: #dee2e6 !important;
            cursor: not-allowed;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button.disabled:hover {
            background: #f8f9fa !important;
            color: #6c757d !important;
            border-color: #dee2e6 !important;
        }

        /* DataTables Pagination Fixes */
        .dataTables_wrapper .dataTables_paginate {
            float: right;
            text-align: right;
            padding: 25px 0;
            margin: 0;
            clear: both;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button {
            border: 1px solid #dee2e6;
            border-radius: 6px;
            padding: 8px 12px;
            margin: 0 3px;
            background: #fff;
            color: #495057;
            cursor: pointer;
            text-decoration: none;
            display: inline-block;
            min-width: 36px;
            height: 36px;
            text-align: center;
            transition: all 0.2s ease;
            font-size: 14px;
            line-height: 20px;
            font-weight: 500;
            vertical-align: middle;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button:hover {
            background: #ed2a26 !important;
            color: white !important;
            border-color: #ed2a26;
            text-decoration: none;
            transform: translateY(-1px);
            box-shadow: 0 2px 4px rgba(237, 42, 38, 0.2);
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button.current {
            background: #ed2a26 !important;
            color: white !important;
            border-color: #ed2a26 !important;
            font-weight: 600;
            box-shadow: 0 2px 6px rgba(237, 42, 38, 0.3);
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button.disabled {
            color: #6c757d !important;
            background: #f8f9fa !important;
            border-color: #dee2e6 !important;
            cursor: not-allowed;
            opacity: 0.6;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button.disabled:hover {
            background: #f8f9fa !important;
            color: #6c757d !important;
            border-color: #dee2e6 !important;
            transform: none;
            box-shadow: none;
        }

        /* DataTables Info Styling */
        .dataTables_wrapper .dataTables_info {
            float: left;
            padding: 25px 0;
            color: #6c757d;
            font-size: 14px;
            font-weight: 500;
            margin: 0;
        }

        /* DataTables Bottom Row Layout */
        .dataTables_wrapper .row:last-child {
            margin-top: 20px;
            padding-top: 25px;
            border-top: 1px solid #e9ecef;
            background: #f8f9fa;
            border-radius: 0 0 12px 12px;
            padding-left: 20px;
            padding-right: 20px;
            padding-bottom: 25px;
        }

        /* Ensure proper spacing and layout */
        .dataTables_wrapper .row {
            margin: 0;
        }

        .dataTables_wrapper .row::after {
            content: "";
            display: table;
            clear: both;
        }

        .dataTables_wrapper .dataTables_info,
        .dataTables_wrapper .dataTables_paginate {
            margin-bottom: 0;
        }

        /* Pagination Container */
        .dataTables_paginate {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            gap: 2px;
        }

        /* First/Last buttons styling */
        .dataTables_wrapper .dataTables_paginate .paginate_button.first,
        .dataTables_wrapper .dataTables_paginate .paginate_button.last {
            font-weight: 600;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button.previous,
        .dataTables_wrapper .dataTables_paginate .paginate_button.next {
            font-weight: 500;
        }

        /* Row and Column Fixes */
        .row {
            margin-left: 0;
            margin-right: 0;
        }

        .row > [class*="col-"] {
            padding-left: 15px;
            padding-right: 15px;
        }

        /* Responsive Design */
        @@media (max-width: 768px) {
            .dashboard_stats_card {
                margin-bottom: 15px;
            }
            
            .filters_section .row > div {
                margin-bottom: 15px;
            }
            
            .table-responsive {
                border-radius: 12px;
            }
            
            .modal-dialog {
                margin: 10px;
            }
            
            .modern-modal .modal-header {
                padding: 20px;
            }
            
            .modern-modal .modal-body {
                padding: 20px;
            }
            
            .icon-options {
                justify-content: center;
            }

            .container-fluid {
                padding-left: 10px;
                padding-right: 10px;
            }

            /* Responsive pagination */
            .dataTables_wrapper .dataTables_info {
                float: none;
                text-align: center;
                padding-bottom: 10px;
            }

            .dataTables_wrapper .dataTables_paginate {
                float: none;
                text-align: center;
                justify-content: center;
            }

            .dataTables_wrapper .row:last-child {
                text-align: center;
            }

            .dataTables_wrapper .dataTables_paginate .paginate_button {
                padding: 6px 10px;
                margin: 0 1px;
                font-size: 12px;
                min-width: 32px;
                height: 32px;
                line-height: 20px;
            }
        }

        /* Loading States */
        .loading {
            opacity: 0.7;
            pointer-events: none;
        }

        .spinner-border-sm {
            width: 1rem;
            height: 1rem;
        }
    </style>
}

@section Scripts {
    <script src="https://cdn.datatables.net/2.1.8/js/dataTables.js"></script>
    <script src="https://cdn.datatables.net/2.1.8/js/dataTables.bootstrap5.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function () {
            // Initialize DataTable with improved pagination
            var table = $('#categoriesTable').DataTable({
                "paging": true,
                "searching": true,
                "info": true,
                "responsive": true,
                "order": [[1, "asc"]], // Sort by category name
                "pageLength": 10,
                "lengthMenu": [[5, 10, 25, 50], [5, 10, 25, 50]],
                "dom": 'tr<"row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
                "language": {
                    "search": "Search categories:",
                    "lengthMenu": "Show _MENU_ categories per page",
                    "info": "Showing _START_ to _END_ of _TOTAL_ categories",
                    "infoEmpty": "No categories found",
                    "infoFiltered": "(filtered from _MAX_ total categories)",
                    "paginate": {
                        "first": "First",
                        "last": "Last", 
                        "next": "Next",
                        "previous": "Previous"
                    },
                    "emptyTable": "No categories found"
                },
                "columnDefs": [
                    { "orderable": false, "targets": [-1] }, // Disable sorting for actions column
                    { "width": "60px", "targets": 0 }, // # column width
                    { "width": "35%", "targets": 1 }, // Category name column
                    { "width": "100px", "targets": 2 }, // Status column
                    { "width": "130px", "targets": 3 }, // Created date column
                    { "width": "100px", "targets": -1 }, // Actions column width
                    { "className": "text-center", "targets": [0, 2, 4] } // Center align specific columns
                ],
                "drawCallback": function(settings) {
                    // Fix row numbering after DataTables processes the data
                    var api = this.api();
                    var startIndex = api.context[0]._iDisplayStart;
                    api.column(0, {page: 'current'}).nodes().each(function(cell, i) {
                        cell.innerHTML = startIndex + i + 1;
                    });
                    
                    // Ensure pagination is properly styled after each draw
                    $('.dataTables_paginate .paginate_button').removeClass('current');
                    $('.dataTables_paginate .paginate_button.current').css({
                        'background': '#ed2a26',
                        'color': 'white',
                        'border-color': '#ed2a26'
                    });
                    
                    // Update info text styling
                    $('.dataTables_info').css({
                        'color': '#6c757d',
                        'font-weight': '500'
                    });
                },
                "initComplete": function() {
                    // Style pagination on initial load
                    $('.dataTables_paginate').css('float', 'right');
                    $('.dataTables_info').css('float', 'left');
                }
            });

            // Search functionality
            $('#searchInput').on('keyup', function() {
                $('#categoriesTable').DataTable().search(this.value).draw();
            });

            // Status filter functionality
            $('#statusFilter').on('change', function() {
                var selectedStatus = $(this).val();
                var table = $('#categoriesTable').DataTable();
                
                if (selectedStatus === '') {
                    // Show all categories
                    table.column(2).search('').draw();
                } else if (selectedStatus === 'active') {
                    // Show only active categories
                    table.column(2).search('Active').draw();
                } else if (selectedStatus === 'inactive') {
                    // Show only inactive categories (if any)
                    table.column(2).search('Inactive').draw();
                }
            });

            // Icon selector functionality
            $(document).on('click', '.icon-option', function(e) {
                e.preventDefault();
                var $this = $(this);
                var iconClass = $this.data('icon');
                var $container = $this.closest('.icon-selector');
                
                // Remove active class from all siblings in this container
                $container.find('.icon-option').removeClass('active');
                $this.addClass('active');
                
                // Update hidden input
                $container.find('input[type="hidden"]').val(iconClass);
                
                // Visual feedback
                $this.effect("bounce", { times: 1 }, 300);
            });

            // Modal open for update
            $('#updateCategoryModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var categoryId = button.data('category-id');
                var categoryName = button.data('category-name');
                var modal = $(this);
                
                modal.find('#updateCategoryId').val(categoryId);
                modal.find('#updateCategoryName').val(categoryName);
                
                // Reset form validation
                modal.find('form')[0].classList.remove('was-validated');
                modal.find('.is-invalid').removeClass('is-invalid');
            });

            // Modal open for create
            $('#createCategoryModal').on('show.bs.modal', function (event) {
                var modal = $(this);
                
                // Reset form
                modal.find('form')[0].reset();
                modal.find('form')[0].classList.remove('was-validated');
                modal.find('.is-invalid').removeClass('is-invalid');
                modal.find('.is-valid').removeClass('is-valid');
                
                // Reset icon selector - ensure it works
                setTimeout(function() {
                    modal.find('.icon-option').removeClass('active');
                    modal.find('.icon-option[data-icon="fas fa-tag"]').addClass('active');
                    modal.find('#categoryIcon').val('fas fa-tag');
                }, 100);
            });

            // Delete category functionality
            $(document).on('click', '.delete-category', function(e) {
                e.preventDefault();
                var categoryId = $(this).data('category-id');
                var categoryName = $(this).data('category-name');
                var deleteUrl = $(this).data('delete-url');

                Swal.fire({
                    title: 'Delete Category?',
                    html: `Are you sure you want to delete the category "<strong>${categoryName}</strong>"?<br><small class="text-muted">This action cannot be undone.</small>`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#dc3545',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'Yes, delete it!',
                    cancelButtonText: 'Cancel',
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        Swal.fire({
                            title: 'Deleting...',
                            text: 'Please wait while we delete the category.',
                            allowOutsideClick: false,
                            didOpen: () => {
                                Swal.showLoading();
                            }
                        });
                        window.location.href = deleteUrl;
                    }
                });
            });

            // View courses functionality
            $(document).on('click', '.view-courses', function(e) {
                e.preventDefault();
                var categoryId = $(this).data('category-id');
                
                // This would navigate to a courses page filtered by category
                // For now, show info message until backend implementation is ready
                Swal.fire({
                    title: 'View Category Courses',
                    text: 'This feature requires backend implementation to show courses for this category.',
                    icon: 'info',
                    confirmButtonColor: '#ed2a26',
                    showCancelButton: true,
                    confirmButtonText: 'Go to Courses',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Navigate to courses page - replace with actual route when available
                        window.location.href = '/Admin/GetCourseApprove';
                    }
                });
            });

            // Animate statistics cards on page load
            $('.dashboard_stats_card').each(function(index) {
                $(this).css('opacity', '0').css('transform', 'translateY(20px)');
                $(this).delay(100 * index).animate({
                    opacity: 1
                }, 600).css('transform', 'translateY(0)');
            });

            // Auto-hide alerts
            setTimeout(function () {
                $('.alert').each(function() {
                    $(this).fadeOut('slow');
                });
            }, 5000);

            // Initialize tooltips
            $('[title]').tooltip();

            // Ensure dropdowns work properly in DataTables
            $('#categoriesTable').on('click', '.dropdown-toggle', function(e) {
                e.stopPropagation();
            });
        });

        // Create category function
        function submitForm() {
            var form = document.getElementById('createCategoryForm');
            var input = document.getElementById('categoryName');
            var valueInput = input.value.trim();
            input.value = valueInput;
            
            // Remove previous validation classes
            form.classList.remove('was-validated');
            $(form).find('.is-invalid').removeClass('is-invalid');
            
            if (!valueInput || isEmptyOrWhitespace(valueInput)) {
                $(input).addClass('is-invalid');
                form.classList.add('was-validated');
                
                Swal.fire({
                    title: 'Validation Error',
                    text: 'Category name is required and cannot be empty or only whitespace.',
                    icon: 'error',
                    confirmButtonColor: '#ed2a26'
                });
                return;
            }
            
            if (valueInput.length > 100) {
                $(input).addClass('is-invalid');
                form.classList.add('was-validated');
                
                Swal.fire({
                    title: 'Validation Error',
                    text: 'Category name must be less than 100 characters.',
                    icon: 'error',
                    confirmButtonColor: '#ed2a26'
                });
                return;
            }

            Swal.fire({
                title: 'Create Category?',
                text: `Are you sure you want to create the category "${valueInput}"?`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#28a745',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Yes, create it!',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Show loading
                    Swal.fire({
                        title: 'Creating Category...',
                        text: 'Please wait while we create the category.',
                        allowOutsideClick: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });
                    form.submit();
                }
            });
        }

        // Update category function
        function updateCategory() {
            var categoryId = $('#updateCategoryId').val();
            var form = document.getElementById('updateCategoryForm');
            var categoryName = $('#updateCategoryName').val().trim();
            var categoryIcon = $('#updateCategoryIcon').val();
            
            // Remove previous validation classes
            form.classList.remove('was-validated');
            $(form).find('.is-invalid').removeClass('is-invalid');

            if (!categoryName || isEmptyOrWhitespace(categoryName)) {
                $('#updateCategoryName').addClass('is-invalid');
                form.classList.add('was-validated');
                
                Swal.fire({
                    title: 'Validation Error',
                    text: 'Category name is required and cannot be empty or only whitespace.',
                    icon: 'error',
                    confirmButtonColor: '#ed2a26'
                });
                return;
            }
            
            if (categoryName.length > 100) {
                $('#updateCategoryName').addClass('is-invalid');
                form.classList.add('was-validated');
                
                Swal.fire({
                    title: 'Validation Error',
                    text: 'Category name must be less than 100 characters.',
                    icon: 'error',
                    confirmButtonColor: '#ed2a26'
                });
                return;
            }

            Swal.fire({
                title: 'Update Category?',
                text: `Are you sure you want to update this category to "${categoryName}"?`,
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#ffc107',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Yes, update it!',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Show loading
                    Swal.fire({
                        title: 'Updating Category...',
                        text: 'Please wait while we update the category.',
                        allowOutsideClick: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });

                    $.ajax({
                        url: '/Admin/UpdateCategory/' + categoryId,
                        type: 'POST',
                        data: {
                            CategoryId: categoryId,
                            CategoryName: categoryName,
                            CategoryIcon: categoryIcon
                        },
                        success: function (response) {
                            if (response.success) {
                                Swal.fire({
                                    title: 'Success!',
                                    text: 'Category updated successfully!',
                                    icon: 'success',
                                    confirmButtonColor: '#28a745'
                                }).then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire({
                                    title: 'Error',
                                    text: response.message || 'Failed to update category.',
                                    icon: 'error',
                                    confirmButtonColor: '#ed2a26'
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Update error:', error);
                            Swal.fire({
                                title: 'Error',
                                text: 'An error occurred while updating the category. Please try again.',
                                icon: 'error',
                                confirmButtonColor: '#ed2a26'
                            });
                        }
                    });
                }
            });
        }

        // Check if input is empty or whitespace
        function isEmptyOrWhitespace(input) {
            return !input || /^\s*$/.test(input);
        }

        // Real-time validation for form inputs
        $('#categoryName, #updateCategoryName').on('input', function() {
            var $this = $(this);
            var value = $this.val().trim();
            
            if (value && !isEmptyOrWhitespace(value) && value.length <= 100) {
                $this.removeClass('is-invalid').addClass('is-valid');
            } else {
                $this.removeClass('is-valid').addClass('is-invalid');
            }
        });
    </script>
}